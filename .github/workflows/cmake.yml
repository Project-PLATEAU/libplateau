name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Update Submodules
      run: git submodule update --remote --recursive

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v3

      # Ubuntuでビルドを通すには OpenGL API のインストールが必要です。
    - name: Install OpenGL API on Ubuntu machine
      if: runner.os == 'Linux'
      run: sudo apt-get install libgl1-mesa-dev libglu1-mesa-dev

      # Windowsのみ
    #- name: Install Mingw on Windows
      #if: runner.os == 'Windows'
      #run: choco install mingw -yes --version=10.2.0
    - name: Setup MSVC for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: CMake configure option (common)
      run: echo "CMAKE_CONFIGURE_OPTION='
        -S ${{github.workspace}} 
        -B ${{github.workspace}}/out/build/x64-Release 
        -G "Ninja" 
        -D CMAKE_BUILD_TYPE:STRING="${{env.BUILDTYPE}}" 
        -D CMAKE_INSTALL_PREFIX:PATH="${{github.workspace}}/out/install/x64-Release" 
        -D CMAKE_INSTALL_PROGRAM="ninja" 
        -D CMAKE_CXX_FLAGS="-w"'" >> $GITHUB_ENV

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      #run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      run: cmake ${{env.CMAKE_CONFIGURE_OPTION}}
   
    # 10万行超えの警告が出るので一時的な処置として警告を抑制しています。
        
      # -D CMAKE_C_COMPILER=cl -D CMAKE_CXX_COMPILER=cl


    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/out/build/x64-Release --config ${{env.BUILD_TYPE}}

#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.  
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}